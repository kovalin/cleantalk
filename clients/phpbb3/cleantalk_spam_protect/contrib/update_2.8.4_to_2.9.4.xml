<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="modx.prosilver.en.xsl"?>
<!--NOTICE: Please open this file in your web browser. If presented with a security warning, you may safely tell it to allow the blocked content.-->
<!--For security purposes, please check: http://www.phpbb.com/mods/ for the latest version of this MOD.\nAlthough MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD.\nNo support will be given for MODs not found within the MODs Database which can be found at http://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.phpbb.com/mods/xml/modx-1.2.5.xsd">
	<header>
		<meta name="generator" content="MODX file generated with PP MODX Creator by tumba25 (online version)"/>
		<license><![CDATA[http://opensource.org/licenses/gpl-license.php GNU General Public License v2]]></license>
		<title lang="en"><![CDATA[Cleantalk. Spam protect. Update from 2.8.4 to 2.9.4]]></title>
		<description lang="en"><![CDATA[MOD moderates new posts in the topic, comparing them with existing and approved posts. To compare MOD uses an automatic moderation service http://cleantalk.ru.

The MOD stops spam without using CAPTCHA.

MOD correctly moderates posts on Russian, for other languages MOD can be used just to stop simple spam like ads links, emails, phone and icq numbers.]]></description>
		<author-notes lang="en"><![CDATA[Posts prohibited publication marked the signature of the service, which specify reasons for blocking. Example below. The signature is appended to the end of each prohibited posts.

*** Post forbidden to publish. Does not affect the subject material. Automoderator cleantalk.ru. ***]]></author-notes>
		<author-group>
			<author>
				<realname><![CDATA[Denis Shagimuratov]]></realname>
				<username><![CDATA[shagimuratov]]></username>
				<homepage><![CDATA[http://cleantalk.ru]]></homepage>
				<email><![CDATA[shagimuratov@cleantalk.ru]]></email>
			</author>
		</author-group>
		<mod-version>2.9.4</mod-version>
		<installation>
			<level>easy</level>
			<time>300</time>
			<target-version>3.0.10</target-version>
		</installation>
		<link-group>
			<link type="language" href="update_2.8.4_to_2.9.4_ru.xml" lang="en">Russian language</link>
		</link-group>
	</header>
	<action-group>
		<copy>
			<file from="root/includes/cleantalk.class.php" to="includes/cleantalk.class.php"/>
			<file from="root/includes/cleantalk.php" to="includes/cleantalk.php"/>
			<file from="root/install_cleantalk_mod.php" to="install_cleantalk_mod.php"/>
			<file from="root/umil/umil.php" to="umil/umil.php"/>
			<file from="root/language/en/mods/info_acp_cleantalk.php" to="language/en/mods/info_acp_cleantalk.php"/>
		</copy>
		<open src="memberlist.php">
			<edit>
				<find><![CDATA[		// Get group memberships
		// Also get visiting user's groups to determine hidden group memberships if necessary.
		$auth_hidden_groups = ($user_id === (int) $user->data['user_id'] || $auth->acl_gets('a_group', 'a_groupadd', 'a_groupdel')) ? true : false;
		$sql_uid_ary = ($auth_hidden_groups) ? array($user_id) : array($user_id, (int) $user->data['user_id']);]]></find>
				<action type="before-add"><![CDATA[		// Begin: cleantalk.ru moderation
		$user->add_lang(array('acp/users'));
		$user_row = $member;

		// You can't delete the founder
		if ($action === 'user_del' && $user_row['user_type'] != USER_FOUNDER)
		{
			$delete_type = 'remove'; // Remove all posts

			if (!$auth->acl_get('a_userdel'))
			{
				trigger_error($user->lang['NO_AUTH_OPERATION']);
			}

			// Check if the user wants to remove himself or the guest user account
			if ($user_id == ANONYMOUS)
			{
				trigger_error($user->lang['CANNOT_REMOVE_ANONYMOUS']);
			}
			if ($user_id == $user->data['user_id'])
			{
				trigger_error($user->lang['CANNOT_REMOVE_YOURSELF']);
			}

			if (confirm_box(true))
			{
				if (!function_exists('user_delete')) 
				{
					include($phpbb_root_path . 'includes/functions_user.' . $phpEx);
				}	

				user_delete($delete_type, $user_id, $user_row['username']);

				add_log('admin', 'LOG_USER_DELETED', $user_row['username']);

				$redirect_url = append_sid("{$phpbb_root_path}memberlist.$phpEx", null, true, $user->session_id);	
				
				meta_refresh(5, $redirect_url);
				
				trigger_error($user->lang['USER_DELETED'] . '<br /><br />' . sprintf($user->lang['CT_RETURN_MEMBERLIST'], $redirect_url));
			}
			else
			{
				confirm_box(false, sprintf($user->lang['CT_CONFIRM_DELETE_USER'], $user_row['username']), build_hidden_fields(array(
					'u'				=> $user_id,
					'mode'			=> $mode,
					'action'		=> $action,
					'delete_type'	=> $delete_type))
				);
			}
		}
		// End: cleantalk.ru moderation]]></action>
			</edit>
			<edit>
				<find><![CDATA[			'U_USER_ADMIN'			=> ($auth->acl_get('a_user')) ? append_sid("{$phpbb_root_path}adm/index.$phpEx", 'i=users&amp;mode=overview&amp;u=' . $user_id, true, $user->session_id) : '',]]></find>
				<action type="after-add"><![CDATA[			// Begin: cleantalk.ru moderation
			'U_USER_DEL'			=> ($auth->acl_get('a_user')) ? append_sid("{$phpbb_root_path}memberlist.$phpEx", 'mode=viewprofile&amp;action=user_del&amp;u=' . $user_id, true, $user->session_id) : '',
			// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="posting.php">
			<edit>
				<find><![CDATA[	// DNSBL check
	if ($config['check_dnsbl'] && !$refresh)
	{
		if (($dnsbl = $user->check_dnsbl('post')) !== false)
		{
			$error[] = sprintf($user->lang['IP_BLACKLISTED'], $user->ip, $dnsbl[1]);
		}
	}]]></find>
				<action type="after-add"><![CDATA[	// Begin: cleantalk.ru moderation
	if ($config['ct_enable'] && ($mode == 'reply' || $mode == 'quote' || $mode == 'post') && !$preview)
	{
		$forum_id = request_var('f', 0); 
		$topic_id = request_var('t', 0); 
		$subject = request_var('subject', 'null'); 
		$username = utf8_normalize_nfc(request_var('username', '', true));

		// Use name from session only if user is registered. Cause 'Anonymous' name often blacklisted.
		if ($username === '' && $user->data['is_registered'])
		{ 
			$username = $user->data['username']; 
		}
		
		if (!function_exists('cleantalk_post'))
		{
			include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
		}

		$moderate = 0; // Flag to start moderation
		$ct_admin = 0; // User is an admin 
		$ct_gmoderator = 0; // User is global moderator 

		$sql = 'SELECT enable_stoplist_check, ct_moderate_guests, ct_moderate_newly_registered, ct_moderate_registered, ct_allow_links FROM ' . FORUMS_TABLE . ' WHERE forum_id = ' . (int) $forum_id;
		$result = $db->sql_query($sql);
		$ct_forum = $db->sql_fetchrow($result);
		$db->sql_freeresult($result);
		
		$sql = 'SELECT g.group_name FROM ' . GROUPS_TABLE . ' g, ' . USERS_TABLE . ' u, ' . USER_GROUP_TABLE . ' ug where
			ug.user_id=u.user_id and ug.group_id=g.group_id and g.group_type = ' . GROUP_SPECIAL . ' and u.user_id = ' . (int) $user->data['user_id'];

		$result = $db->sql_query($sql);
		while ($row = $db->sql_fetchrow($result)){
			if ($row['group_name'] === 'GLOBAL_MODERATORS')
			{
				$ct_gmoderator = 1;
			}
			if ($row['group_name'] === 'ADMINISTRATORS')
			{
				$ct_admin = 1;
			}
			if ($moderate)
			{
				continue; // Skip loop if $moderate is on
			}
			if (($row['group_name'] === 'GUESTS' && $ct_forum['ct_moderate_guests']) || ($row['group_name'] === 'NEWLY_REGISTERED' && $ct_forum['ct_moderate_newly_registered']) || ($row['group_name'] === 'REGISTERED' && $ct_forum['ct_moderate_registered']))
			{
				$moderate  = 1;	
			}	
		}
		// Disable moderation if message from administration
		if ($moderate && ($ct_admin || $ct_gmoderator))
		{
			$moderate  = 0;	
		}
		$db->sql_freeresult($result);
		
		if ($moderate)
		{	
			$ct_response = cleantalk_post($message_parser->message, $forum_id, $topic_id, $username, $ct_forum);
		}
		
		if (isset($ct_response['allow']) && isset($ct_response['blacklisted']) && !$ct_response['allow'] && $ct_response['blacklisted'])
		{
			add_log('user', null, $ct_response['comment']);
			$error[] = $ct_response['comment'];
		}
		
		if (isset($ct_response['stop_words']) && $post_data['enable_bbcode'])
		{
			foreach (explode(':', $ct_response['stop_words']) as $word)
			{
				$message_parser->message = preg_replace("/($word)/ui", '[color=#FF1000]' . "$1" . '[/color]', $message_parser->message); 
			}
			$message_parser->parse($post_data['enable_bbcode'], ($config['allow_post_links']) ? $post_data['enable_urls'] : false, $post_data['enable_smilies'], $img_status, $flash_status, $quote_status, $config['allow_post_links']);
		}
		
	}
	// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="adm/style/acp_forums.html">
			<edit>
				<find><![CDATA[<dl>
			<dt><label for="enbale_stoplist_check">{L_ENABLE_STOPLIST_CHECK}:</label><br /><span>{L_ENABLE_STOPLIST_CHECK_EXPLAIN}</span></dt>
			<dd><label><input type="radio" class="radio" name="enable_stoplist_check" value="1"<!-- IF S_ENABLE_STOPLIST_CHECK --> id="enable_stoplist_check" checked="checked"<!-- ENDIF --> /> {L_YES}</label>
				<label><input type="radio" class="radio" name="enable_stoplist_check" value="0"<!-- IF not S_ENABLE_STOPLIST_CHECK --> id="enable_stoplist_check" checked="checked"<!-- ENDIF --> /> {L_NO}</label></dd>
		</dl>]]></find>
				<action type="after-add"><![CDATA[		<dl>
			<dt><label for="ct_allow_links">{L_CT_ALLOW_LINKS}:</label><br /><span>{L_CT_ALLOW_LINKS_EXPLAIN}</span></dt>
			<dd><label><input type="radio" class="radio" name="ct_allow_links" value="1"<!-- IF S_CT_ALLOW_LINKS --> id="ct_allow_links" checked="checked"<!-- ENDIF --> /> {L_YES}</label>
				<label><input type="radio" class="radio" name="ct_allow_links" value="0"<!-- IF not S_CT_ALLOW_LINKS --> id="ct_allow_links" checked="checked"<!-- ENDIF --> /> {L_NO}</label></dd>
		</dl>]]></action>
			</edit>
		</open>
		<open src="includes/functions.php">
			<edit>
				<find><![CDATA[	$template->assign_vars(array(
		'DEBUG_OUTPUT'			=> (defined('DEBUG')) ? $debug_output : '',]]></find>
				<action type="after-add"><![CDATA[		'CLEANTALK_INFO'		=> (!empty($user->lang['CLEANTALK_INFO'])) ? $user->lang['CLEANTALK_INFO'] : '',]]></action>
			</edit>
		</open>
		<open src="includes/functions_user.php">
			<edit>
				<find><![CDATA[	// Decrement number of users if this user is active
	if ($user_row['user_type'] != USER_INACTIVE && $user_row['user_type'] != USER_IGNORE)
	{
		set_config_count('num_users', -1, true);
	}]]></find>
				<action type="after-add"><![CDATA[	// Begin: cleantalk.ru moderation
	if ($config['ct_enable'] && (isset($user_row['ct_request_id']) && $user_row['ct_request_id'] !== ''))
	{
		if (!function_exists('ct_error_mail') || !function_exists('ct_send_request'))
		{
			include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
		}	
		$ct_response = null; // XML::RPC response from cleantalk.ru server

		$ct_feedback['moderate'][] = 
			array(
				'msg_hash' => $user_row['ct_request_id'], 
				'is_allow' => 0 // User disallowed 
			);
		
		$ct_response = ct_send_request('send_feedback', $ct_feedback);
		
		if(is_object($ct_response) && $ct_response->faultCode())
		{
			ct_error_mail($ct_response);
		}
	}
	// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="includes/message_parser.php">
			<edit>
				<find><![CDATA[		// Begin: cleantalk.ru moderation
		if ($config['ct_enable']){
			$forum_id = request_var('f', 0); 
			$topic_id = request_var('t', 0); 
			$subject = request_var('subject', 'null'); 
			$username = utf8_normalize_nfc(request_var('username', '', true)); 
			// Use name from session only if user is registered. Cause 'Anonymous' name often blacklisted.
			if ($username === '' && $user->data['is_registered'])
			{ 
				$username = $user->data['username']; 
			}
			
			if (!function_exists('cleantalk_post'))
			{
				include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
			}

			$moderate = 0; // Flag to start moderation
			$ct_admin = 0; // User is an admin 
			$ct_gmoderator = 0; // User is global moderator 

			$sql = 'SELECT enable_stoplist_check, ct_moderate_guests, ct_moderate_newly_registered, ct_moderate_registered FROM ' . FORUMS_TABLE . ' WHERE forum_id = ' . (int) $forum_id;
			$result = $db->sql_query($sql);
			$ct_forum = $db->sql_fetchrow($result);
			$db->sql_freeresult($result);
			
			$sql = 'SELECT g.group_name FROM ' . GROUPS_TABLE . ' g, ' . USERS_TABLE . ' u, ' . USER_GROUP_TABLE . ' ug where
				ug.user_id=u.user_id and ug.group_id=g.group_id and g.group_type = ' . GROUP_SPECIAL . ' and u.user_id = ' . (int) $user->data['user_id'];

			$result = $db->sql_query($sql);
			while ($row = $db->sql_fetchrow($result)){
				if ($row['group_name'] === 'GLOBAL_MODERATORS')
				{
					$ct_gmoderator = 1;
				}
				if ($row['group_name'] === 'ADMINISTRATORS')
				{
					$ct_admin = 1;
				}
				if ($moderate)
				{
					continue; // Skip loop if $moderate is on
				}
				if (($row['group_name'] === 'GUESTS' && $ct_forum['ct_moderate_guests']) || ($row['group_name'] === 'NEWLY_REGISTERED' && $ct_forum['ct_moderate_newly_registered']) || ($row['group_name'] === 'REGISTERED' && $ct_forum['ct_moderate_registered']))
				{
					$moderate  = 1;	
				}	
			}
			// Disable moderation if message from administration
			if ($moderate && ($ct_admin || $ct_gmoderator))
			{
				$moderate  = 0;	
			}
			$db->sql_freeresult($result);
			
			if ($moderate)
			{	
				@cleantalk_post($this->message, $forum_id, $topic_id, &$ct_response, $username, $ct_forum['enable_stoplist_check']);
			}
		
			if (isset($ct_response['allow']) && isset($ct_response['blacklisted']) && !$ct_response['allow'] && $ct_response['blacklisted'])
			{
				$this->warn_msg[] = $ct_response['comment']; 
				add_log('user', null, $ct_response['comment']);
				return (!$update_this_message) ? $return_message : $this->warn_msg;
			}
		}
		// End: cleantalk.ru moderation
]]></find>
				<action type="replace-with"/>
			</edit>
		</open>
		<open src="includes/acp/acp_board.php">
			<edit>
				<find><![CDATA[			if ($submit)
			{
				set_config($config_name, $config_value);]]></find>
				<action type="after-add"><![CDATA[				// Begin : cleantalk options 
				if ($config_name === 'ct_server_url')
				{
					set_config('ct_work_url', '');
				}
				// End : cleantalk options ]]></action>
			</edit>
		</open>
		<open src="includes/acp/acp_forums.php">
			<edit>
				<find><![CDATA[						'enable_stoplist_check'	=> request_var('enable_stoplist_check', false),
]]></find>
				<action type="before-add"><![CDATA[						'ct_allow_links'	=> request_var('ct_allow_links', false),
]]></action>
			</edit>
			<edit>
				<find><![CDATA[							'enable_stoplist_check'	=> true,
]]></find>
				<action type="before-add"><![CDATA[							'ct_allow_links'	=> true,
]]></action>
			</edit>
			<edit>
				<find><![CDATA[					'S_ENABLE_STOPLIST_CHECK'		=>	($forum_data['enable_stoplist_check']) ? true : false, 
]]></find>
				<action type="before-add"><![CDATA[					'S_CT_ALLOW_LINKS'		=>	($forum_data['ct_allow_links']) ? true : false, 
]]></action>
			</edit>
		</open>
		<open src="includes/mcp/mcp_queue.php">
			<edit>
				<find><![CDATA[			// Begin : cleantalk.ru moderation
			if (!function_exists('ct_error_mail'))
			{
				include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
			}	
			if (!class_exists('Cleantalk'))
			{
				include($phpbb_root_path . 'includes/cleantalk.class.' . $phpEx);
				$ct = new Cleantalk(array(
					'auth_key' => $config['ct_auth_key'],
					'server_url' => $config['ct_server_url'],
					'response_lang' => $config['ct_response_lang']
				));
			}	
			$ct_feddback = array();
			foreach ($post_info as $post_id => $post_data)
			{
				$ct_request_id = $ct->getCleantalkCommentHash($post_data['post_text']);
				if (isset($ct_request_id))
				{
					$ct_feedback['moderate'][] = 
						array(
							'msg_hash' => $ct_request_id, 
							'is_allow' => 1 // Post allowed 
						);
					$ct_post_text = $ct->delCleantalkComment($post_data['post_text']);
					if ($ct_post_text != $post_data['post_text'])
					{
						$sql = 'UPDATE ' . POSTS_TABLE . "
							SET post_text = '" . $db->sql_escape($ct_post_text) . "'
							WHERE post_id = " . (int) $post_id; 
						$db->sql_query($sql);
					}
				}

			}
			if (isset($ct_feedback))
			{
				if (!$ct->sendFeedback($ct_feedback, &$response))
				{
					ct_error_mail($response);
				}
			}
			// End: cleantalk.ru moderation]]></find>
				<action type="replace-with"><![CDATA[			// Begin : cleantalk.ru moderation
			if ($config['ct_enable'])
			{
				if (!function_exists('ct_error_mail'))
				{
					include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
				}
				if (!class_exists('Cleantalk'))
				{
					include($phpbb_root_path . 'includes/cleantalk.class.' . $phpEx);
					$ct = new Cleantalk(array(
						'auth_key' => $config['ct_auth_key'],
						'server_url' => $config['ct_server_url'],
						'response_lang' => $config['ct_response_lang']
					));
				}	
				$ct_feedback = array();
				foreach ($post_info as $post_id => $post_data)
				{
					$ct_request_id = $ct->getCleantalkCommentHash($post_data['post_text']);
					if (isset($ct_request_id))
					{
						$ct_feedback['moderate'][] = 
							array(
								'msg_hash' => $ct_request_id, 
								'is_allow' => 1 // Post allowed 
							);
						$ct_post_text = $ct->delCleantalkComment($post_data['post_text']);
						$ct_post_text = preg_replace("/\[color\=\#FF1000\:[a-z0-9]+\](\S+)\[\/color\:[a-z0-9]+\]/iu", '$1', $ct_post_text);
						if ($ct_post_text != $post_data['post_text'])
						{
							$sql = 'UPDATE ' . POSTS_TABLE . "
								SET post_text = '" . $db->sql_escape($ct_post_text) . "'
								WHERE post_id = " . (int) $post_id; 
							$db->sql_query($sql);
						}
					}

				}
				if (isset($ct_feedback))
				{
					$ct_response = ct_send_request('send_feedback', $ct_feedback, $ct);
					
					if(is_object($ct_response) && $ct_response->faultCode())
					{
						ct_error_mail($ct_response);
					}
				}
			}
			// End: cleantalk.ru moderation]]></action>
			</edit>
			<edit>
				<find><![CDATA[		// Begin : cleantalk.ru moderation
		if (!function_exists('ct_error_mail'))
		{
			include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
		}	
		if (!class_exists('Cleantalk'))
		{
			include($phpbb_root_path . 'includes/cleantalk.class.' . $phpEx);
			$ct = new Cleantalk(array(
				'auth_key' => $config['ct_auth_key'],
				'server_url' => $config['ct_server_url'],
				'response_lang' => $config['ct_response_lang']
			));
		}	
		$ct_feddback = array();
		foreach ($post_info as $post_id => $post_data)
		{
			$ct_request_id = $ct->getCleantalkCommentHash($post_data['post_text']);
			if (isset($ct_request_id))
			{
				$ct_feedback['moderate'][] = 
					array(
						'msg_hash' => $ct_request_id, 
						'is_allow' => 0 // Post disallowed 
					);
			}
		}
		if (isset($ct_feedback))
		{
			if (!$ct->sendFeedback($ct_feedback, &$response))
			{
				ct_error_mail($response);
			}
		}
		// End: cleantalk.ru moderation]]></find>
				<action type="replace-with"><![CDATA[		// Begin : cleantalk.ru moderation
		if ($config['ct_enable'])
		{
			if (!function_exists('ct_error_mail'))
			{
				include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
			}	
			if (!class_exists('Cleantalk'))
			{
				include($phpbb_root_path . 'includes/cleantalk.class.' . $phpEx);
				$ct = new Cleantalk(array(
					'auth_key' => $config['ct_auth_key'],
					'server_url' => $config['ct_server_url'],
					'response_lang' => $config['ct_response_lang']
				));
			}	
			$ct_feedback = array();
			foreach ($post_info as $post_id => $post_data)
			{
				$ct_request_id = $ct->getCleantalkCommentHash($post_data['post_text']);
				if (isset($ct_request_id))
				{
					$ct_feedback['moderate'][] = 
						array(
							'msg_hash' => $ct_request_id, 
							'is_allow' => 0 // Post disallowed 
						);
				}
			}
			if (isset($ct_feedback))
			{
				$ct_response = ct_send_request('send_feedback', $ct_feedback, $ct);
				
				if(is_object($ct_response) && $ct_response->faultCode())
				{
					ct_error_mail($ct_response);
				}
			}
		}
		// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="includes/ucp/ucp_register.php">
			<edit>
				<find><![CDATA[		// Begin: cleantalk.ru moderation
		if ($config['ct_newuser'] && $data['tz'] == -12)
        {
			$message = $user->lang['ACCOUNT_INACTIVE'];
  			$message = $message . '<br /><br />' . sprintf($user->lang['RETURN_INDEX'], '<a href="' . append_sid("{$phpbb_root_path}index.$phpEx") . '">', '</a>');
 
            trigger_error($message);
         }
		// End: cleantalk.ru moderation]]></find>
				<action type="replace-with"/>
			</edit>
			<edit>
				<find><![CDATA[		// Begin: cleantalk.ru moderation
			if (!sizeof($error) && $config['ct_newuser'])
			{
				if (!function_exists('ct_error_mail') || !function_exists('ct_session_ip'))
				{
					include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
				}	
				
				if (!class_exists('Cleantalk'))
				{
					include($phpbb_root_path . 'includes/cleantalk.class.' . $phpEx);
					$ct = new Cleantalk(array(
						'auth_key' => $config['ct_auth_key'],
						'server_url' => $config['ct_server_url'],
						'response_lang' => $config['ct_response_lang']
					));
				}
				
				$ct_response = null; // XML::RPC response from cleantalk.ru server
               
				// Check user at cleantalk.ru database 
				if (!@$ct->isAllowUser(array(
						'ip' => ct_session_ip($user->data['session_ip']),
						'email' => $data['email'],
						'username' => $data['username'],
						'engine' => $config['ct_agent']
					), &$ct_response))
				{
					ct_error_mail($ct_response);
					$ct_response = null; // Because is object 
				}
				
				if (isset($ct_response['allow']) && !$ct_response['allow'])
				{
					$error[] = $ct_response['comment'];
					add_log('user', null, sprintf($user->lang['CT_USER_DENY'], $data['username'], $data['email']) . ' '. $ct_response['comment']);
				}
			}
			// End: cleantalk.ru moderation]]></find>
				<action type="replace-with"><![CDATA[			// Begin: cleantalk.ru moderation
			if (!sizeof($error) && $config['ct_newuser'] && $config['ct_enable'])
			{
				if (!function_exists('ct_error_mail') || !function_exists('ct_session_ip') || !function_exists('ct_send_request'))
				{
					include($phpbb_root_path . 'includes/cleantalk.' . $phpEx);
				}	
				$ct_response = null; // XML::RPC response from cleantalk.ru server

				$params = array(
						'session_ip' => ct_session_ip($user->data['session_ip']),
						'user_email' => $data['email'],
						'user_name' => $data['username'],
						'engine' => $config['ct_agent'],
						'tz' => $data['tz']
				);
				
				// Check user at cleantalk.ru database 
				$ct_response = ct_send_request('check_newuser', $params);

				if(is_object($ct_response) && $ct_response->faultCode())
				{
					ct_error_mail($ct_response);
					$ct_response = null; // Because is object 
				}
				if (isset($ct_response['allow']) && !$ct_response['allow'])
				{
					$error[] = $ct_response['comment'];
					add_log('user', null, sprintf($user->lang['CT_USER_DENY'], $data['username'], $data['email']) . ' '. $ct_response['comment']);
				}
			}
			// End: cleantalk.ru moderation]]></action>
			</edit>
			<edit>
				<find><![CDATA[				$user_row = array(
					'username'				=> $data['username'],
					'user_password'			=> phpbb_hash($data['new_password']),
					'user_email'			=> $data['email'],
					'group_id'				=> (int) $group_id,
					'user_timezone'			=> (float) $data['tz'],
					'user_dst'				=> $is_dst,
					'user_lang'				=> $data['lang'],
					'user_type'				=> $user_type,
					'user_actkey'			=> $user_actkey,
					'user_ip'				=> $user->ip,
					'user_regdate'			=> time(),
					'user_inactive_reason'	=> $user_inactive_reason,
					'user_inactive_time'	=> $user_inactive_time,
				);]]></find>
				<action type="after-add"><![CDATA[				// Begin: cleantalk.ru moderation
				if (isset($ct_response['id']))
					$user_row = array_merge(array(
							'ct_request_id' 		=> $ct_response['id'] 	
							), $user_row);
				// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="language/en/common.php">
			<edit>
				<find><![CDATA[$lang = array_merge($lang, array(
	'CT_ERROR'			=> 'Got error: %s while connecting to Cleantalk server %s',
	'CT_USER_DENY'		=> 'User name: %s, email: %s.',
));
]]></find>
				<action type="replace-with"><![CDATA[// Begin : cleantalk.ru moderation
$lang = array_merge($lang, array(
	'CT_ERROR'			=> 'Got error: %s while connecting to Cleantalk server %s',
	'CT_USER_DENY'		=> 'User name: %s, email: %s.',
	'CT_CONFIRM_DELETE_USER'		=> 'Are you sure delete user <b>%s</b> with all his posts?',
	'CT_RETURN_MEMBERLIST'		=> '<a href="%s">Return to memberslist</a>',
	'CLEANTALK_INFO'		=> '<a href="http://cleantalk.ru/phpbb3">Spam protect for phpBB</a>'
));
// End: cleantalk.ru moderation]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/memberlist_view.html">
			<edit>
				<find><![CDATA[			<!-- IF U_SWITCH_PERMISSIONS --> [ <a href="{U_SWITCH_PERMISSIONS}">{L_USE_PERMISSIONS}</a> ]<!-- ENDIF -->]]></find>
				<action type="after-add"><![CDATA[			<!-- IF U_USER_DEL --> [ <a href="{U_USER_DEL}"><span style="color: red;">{L_DELETE_USER}</span></a> ]<!-- ENDIF -->]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/overall_footer.html">
			<edit>
				<find><![CDATA[<div class="copyright">Powered by <a href="http://www.phpbb.com/">phpBB</a>&reg; Forum Software &copy; phpBB Group]]></find>
				<action type="after-add"><![CDATA[		<!-- IF CLEANTALK_INFO --><br />{CLEANTALK_INFO}<!-- ENDIF -->]]></action>
			</edit>
		</open>
		<php-installer><![CDATA[install_cleantalk_mod.php]]></php-installer>
		<diy-instructions lang="en"><![CDATA[1. Purge cache.
2. Register a new user to check registration proccess.
3. Post a message to forum where have enabled Cleantalk.]]></diy-instructions>
	</action-group>
</mod>
